// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::functions::pureToSqlQuery::*;
import meta::relational::functions::snowflake::*;
import meta::pure::functions::collection::*;
import meta::pure::functions::meta::*;

// Add Snowflake support for map put function
function <<functionType.NativeFunction>> meta::relational::functions::snowflake::mapInsert<U,V>(map:Map<U,V>[1], key:U[1], value:V[1]):Map<U,V>[1]
{
  meta::pure::functions::collection::put($map, $key, $value);
}

function meta::relational::functions::snowflake::mapInsertSQLString(map:String[1], key:String[1], value:String[1]):String[1]
{
  'MAP_INSERT(' + $map + ', ' + $key + ', ' + $value + ')';
}

function meta::relational::snowflake::registerMapInsertFunctions():Boolean[1]
{
  meta::relational::functions::pureToSqlQuery::registerParameterizedSQLFunction(
    meta::relational::functions::snowflake::mapInsert_Map_1__U_1__V_1__Map_1_,
    {map:String[1], key:String[1], value:String[1] | meta::relational::functions::snowflake::mapInsertSQLString($map, $key, $value)},
    ['Snowflake']
  );
}
