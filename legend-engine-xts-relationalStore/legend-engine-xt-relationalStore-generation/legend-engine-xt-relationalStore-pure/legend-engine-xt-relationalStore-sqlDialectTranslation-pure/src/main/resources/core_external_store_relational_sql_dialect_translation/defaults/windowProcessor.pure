// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::functions::sqlQueryToString::default::*;
import meta::relational::functions::sqlQueryToString::*;
import meta::relational::metamodel::operation::*;
import meta::relational::metamodel::relation::*;
import meta::relational::metamodel::*;
import meta::relational::runtime::*;
import meta::pure::extension::*;
import meta::core::runtime::*;
import meta::pure::metamodel::relation::*;

function meta::relational::functions::sqlQueryToString::default::processWindowColumnDefault(window: WindowColumn[1], sgc: SqlGenerationContext[1]): String[1]
{
   let partitionBy = if($window.partitionBy->isEmpty(), 
                        '', 
                        'partition by ' + $window.partitionBy->map(p | $p->processOperation($sgc))->joinStrings(', '));
   
   let orderBy = if($window.orderBy->isEmpty(), 
                    '', 
                    'order by ' + $window.orderBy->map(o | $o.column->processOperation($sgc) + if($o.direction == SortDirection.ASC, ' asc', ' desc'))->joinStrings(', '));
   
   let frame = processWindowFrame($window, $sgc);
   
   let separator = if($partitionBy == '' || $orderBy == '', '', ' ');
   
   $partitionBy + $separator + $orderBy + $frame;
}
