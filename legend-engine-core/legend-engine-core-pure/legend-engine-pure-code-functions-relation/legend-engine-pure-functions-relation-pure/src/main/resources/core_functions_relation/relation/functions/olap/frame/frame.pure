// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::metamodel::relation::*;
import meta::pure::functions::relation::*;

/**
 * WindowFrame represents the frame specification for window functions.
 * It defines the range of rows that are included in the window frame.
 */
Class meta::pure::metamodel::relation::WindowFrame
{
    mode: String[1]; // ROWS, RANGE, or GROUPS
    startBound: String[1]; // UNBOUNDED PRECEDING, CURRENT ROW, or N PRECEDING/FOLLOWING
    endBound: String[1]; // UNBOUNDED FOLLOWING, CURRENT ROW, or N PRECEDING/FOLLOWING
}

/**
 * Creates a window frame specification with the given mode and bounds.
 * @param mode - The frame mode (ROWS, RANGE, or GROUPS)
 * @param startBound - The start bound of the frame
 * @param endBound - The end bound of the frame
 * @return A WindowFrame instance
 */
function meta::pure::functions::relation::windowFrame(mode: String[1], startBound: String[1], endBound: String[1]): WindowFrame[1]
{
    ^WindowFrame(
        mode = $mode,
        startBound = $startBound,
        endBound = $endBound
    );
}

/**
 * Creates a default window frame with ROWS mode and bounds from UNBOUNDED PRECEDING to CURRENT ROW.
 * @return A WindowFrame instance with default settings
 */
function meta::pure::functions::relation::defaultWindowFrame(): WindowFrame[1]
{
    windowFrame('ROWS', 'UNBOUNDED PRECEDING', 'CURRENT ROW');
}
